#!/usr/bin/env python3
import argparse
import asyncio
import sys
import binascii
from protocol import unpack_sensorgrams


async def read_message(reader):
    while True:
        data = await reader.readline()
        if len(data) == 0:
            raise ConnectionError('connection closed')
        try:
            return unpack_sensorgrams(binascii.a2b_base64(data))
        except binascii.Error:
            pass


async def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('server')
    args = parser.parse_args()

    reader, _ = await asyncio.open_unix_connection(args.server)
    while True:
        msg = await asyncio.wait_for(read_message(reader), timeout=300)
        print(msg)

asyncio.run(main())
